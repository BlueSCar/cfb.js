/*
 * College Football Data API
 * This is an API for accessing all sorts of college football data.  It currently has a wide array of data ranging from play by play to player statistics to game scores and more.
 *
 * OpenAPI spec version: 2.2.16
 * Contact: admin@collegefootballdata.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.17
 *
 * Do not edit the class manually.
 *
 */

import {ApiClient} from "../ApiClient";
import {Drive} from '../model/Drive';

/**
* Drives service.
* @module api/DrivesApi
* @version 2.2.16
*/
export class DrivesApi {

    /**
    * Constructs a new DrivesApi. 
    * @alias module:api/DrivesApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }



    /**
     * Drive data and results
     * Get game drives
     * @param {Number} year Year filter
     * @param {Object} opts Optional parameters
     * @param {String} opts.seasonType Season type filter (default to regular)
     * @param {Number} opts.week Week filter
     * @param {String} opts.team Team filter
     * @param {String} opts.offense Offensive team filter
     * @param {String} opts.defense Defensive team filter
     * @param {String} opts.conference Conference filter
     * @param {String} opts.offenseConference Offensive conference filter
     * @param {String} opts.defenseConference Defensive conference filter
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link Array.<module:model/Drive>} and HTTP response
     */
    getDrviesWithHttpInfo(year, opts) {
      opts = opts || {};
      let postBody = null;

      // verify the required parameter 'year' is set
      if (year === undefined || year === null) {
        throw new Error("Missing the required parameter 'year' when calling getDrvies");
      }


      let pathParams = {
      };
      let queryParams = {
        'seasonType': opts['seasonType'],
        'year': year,
        'week': opts['week'],
        'team': opts['team'],
        'offense': opts['offense'],
        'defense': opts['defense'],
        'conference': opts['conference'],
        'offenseConference': opts['offenseConference'],
        'defenseConference': opts['defenseConference']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [Drive];

      return this.apiClient.callApi(
        '/drives', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType
      );
    }

    /**
     * Drive data and results
     * Get game drives
     * @param {Number} year Year filter
     * @param {Object} opts Optional parameters
     * @param {String} opts.seasonType Season type filter (default to regular)
     * @param {Number} opts.week Week filter
     * @param {String} opts.team Team filter
     * @param {String} opts.offense Offensive team filter
     * @param {String} opts.defense Defensive team filter
     * @param {String} opts.conference Conference filter
     * @param {String} opts.offenseConference Offensive conference filter
     * @param {String} opts.defenseConference Defensive conference filter
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link Array.<module:model/Drive>}
     */
    getDrvies(year, opts) {
      return this.getDrviesWithHttpInfo(year, opts)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


}
